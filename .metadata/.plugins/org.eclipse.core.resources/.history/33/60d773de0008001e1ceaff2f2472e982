package com.api.book.bootrestbook.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.api.book.bootrestbook.entities.Book;
import com.api.book.bootrestbook.services.BookService;

@RestController
public class BookController {
	
	@Autowired
	public BookService bookService;

	//get all book handler
	@GetMapping("/books")
	public ResponseEntity<List<Book>> getBooks() {
		
		 List<Book> allBooks = bookService.getAllBooks();
		 if(allBooks.isEmpty()) {
			 return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		 }
		
		return ResponseEntity.of(Optional.of(allBooks));
	}
	
	//get single book handler
	@GetMapping("/books/{id}")
	public ResponseEntity<Book> getBook(@PathVariable("id") int id) {
		 Book bookbyId = bookService.getBookbyId(id);
		 
		 if(bookbyId == null) {
			  return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
		 }
		 return ResponseEntity.of(Optional.of(bookbyId));	
	}
	
	//add new book handler
	@PostMapping("/books")
	public ResponseEntity<Book> addBook(@RequestBody Book book) {
		Book addBook = null;
		
		try {
			addBook = this.bookService.addBook(book);
		}catch (Exception e) {
			
		}
		
		
		return ;
	}
	
	//Delete book handler
	@DeleteMapping("/books/{id}")
	public void deleteBook(@PathVariable("id") int id) {
		this.bookService.deleteBook(id);
	}
	
	//update book handler 
	@PutMapping("/books/{id}")
	public Book updateBook(@RequestBody Book book, @PathVariable("id") int id) {
		 this.bookService.updateBook(book, id);
		 
		 return book;
	}
}
